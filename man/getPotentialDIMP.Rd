% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getPotentialDIMP.R
\name{getPotentialDIMP}
\alias{getPotentialDIMP}
\title{Potential methylation signal}
\usage{
getPotentialDIMP(LR, nlms = NULL, div.col, dist.name = "Weibull2P",
  absolute = FALSE, alpha = 0.05, tv.col = NULL, tv.cut = NULL,
  min.coverage = NULL, hdiv.col = NULL, hdiv.cut = NULL)
}
\arguments{
\item{LR}{An object from 'InfDiv' or "testDMP" class. These objects are
previously obtained with function \code{\link{estimateDivergence}} or
\code{\link{FisherTest}}.}

\item{nlms}{A list of distribution fitted models (output of
'fitNonlinearWeibullDist' function) or NULL. If NULL, then empirical
cumulative distribution function is used to get the potential DIMPs.}

\item{div.col}{Column number for divergence variable is located in the
meta-column.}

\item{dist.name}{name of the distribution to fit: Weibull2P (default:
"Weibull2P"), Weibull three-parameters (Weibull3P), gamma with
three-parameter (Gamma3P), gamma with two-parameter (Gamma2P),
generalized gamma with three-parameter ("GGamma3P") or four-parameter
("GGamma4P"), the empirical cumulative distribution function (ECDF) or
"None". If dist.name != "None", and nlms != NULL, then a column named
"wprob" with a probability vector derived from the application of model
"nlms" will be returned.}

\item{absolute}{Logic (default, FALSE). Total variation (TV, the difference
of methylation levels) is normally an output in the downstream MethylIT
analysis. If 'absolute = TRUE', then TV is transformed into |TV|, which
is an information divergence that can be fitted to Weibull or to
Generalized Gamma distribution. So, if the nonlinear fit was performed
for |TV|, then absolute must be set to TRUE.}

\item{alpha}{A numerical value (usually alpha < 0.05) used to select
cytosine sites k with information divergence (DIV_k) for which Weibull
probability P[DIV_k > DIV(alpha)].}

\item{tv.col}{Column number for the total variation to be used for filtering
cytosine positions (if provided).}

\item{tv.cut}{If tv.cut and tv.col are provided, then cytosine sites k with
abs(TV_k) < tv.cut are removed before to perform the ROC analysis.}

\item{min.coverage}{Cytosine sites with coverage less than min.coverage are
discarded. Default: 0}

\item{hdiv.col}{Optional. A column number for the Hellinger distance to be
used for filtering cytosine positions. Default is NULL.}

\item{hdiv.cut}{If hdiv.cut and hdiv.col are provided, then cytosine sites k
with hdiv < hdiv.cut are removed.}
}
\value{
A list of GRanges objects, each GRanges object carrying the selected
    cytosine sites and and the Weibull probability P[DIV_k > DIV(alpha)].
}
\description{
This function perform a selection of the cytosine sites
    carrying the potential methylation signal. The potential signals from
    controls and treatments are used as prior classification in further step
    of signal detection.
}
\details{
The potential signals are cytosine sites k with information
    divergence (DIV_k) values greater than the DIV(alpha = 0.05). The value
    of alpha can be specified. For example, potential signals with
    DIV_k > DIV(alpha = 0.01) can be selected. For each sample, cytosine
    sites are selected based on the corresponding nonlinear fitted
    distribution model that has been supplied.
}
\examples{
num.points <- 1000
num.samples <- 250
x <- data.frame(chr = "chr1", start = 1:num.samples,
                end = 1:num.samples,strand = '*',
                mC = rnbinom(size = num.samples, mu = 4, n = 500),
                uC = rnbinom(size = num.samples, mu = 4, n = 500))
y <- data.frame(chr = "chr1", start = 1:num.samples,
                end = 1:num.samples, strand = '*',
                mC = rnbinom(size = num.samples, mu = 4, n = 500),
                uC = rnbinom(size = num.samples, mu = 4, n = 500))
x <- makeGRangesFromDataFrame(x, keep.extra.columns = TRUE)
y <- makeGRangesFromDataFrame(y, keep.extra.columns = TRUE)
HD <- estimateDivergence(ref = x, indiv = list(y))
nlms <- nonlinearFitDist(HD, column = 1, verbose = FALSE)
getPotentialDIMP(LR = HD, nlms = nlms, div.col = 1, alpha = 0.05)

}
